var R=({base:e="",routes:t=[]}={})=>({__proto__:new Proxy({},{get:(s,r,i)=>(a,...l)=>t.push([r.toUpperCase(),RegExp(`^${(e+"/"+a).replace(/\/+(\/|$)/g,"$1").replace(/(\/?\.?):(\w+)\+/g,"($1(?<$2>*))").replace(/(\/?\.?):(\w+)/g,"($1(?<$2>[^$1/]+?))").replace(/\./g,"\\.").replace(/(\/?)\*/g,"($1.*)?")}/*$`),l])&&i}),routes:t,async handle(s,...r){let i,a,l=new URL(s.url),o=s.query={};for(let[n,c]of l.searchParams)o[n]=o[n]===void 0?c:[o[n],c].flat();for(let[n,c,u]of t)if((n===s.method||n==="ALL")&&(a=l.pathname.match(c))){s.params=a.groups||{};for(let h of u)if((i=await h(s.proxy||s,...r))!==void 0)return i}}});var p=(e="text/plain; charset=utf-8",t)=>(s,r={})=>{let{headers:i={},...a}=r;return s?.constructor.name==="Response"?s:new Response(t?t(s):s,{headers:{"content-type":e,...i},...a})},d=p("application/json; charset=utf-8",JSON.stringify),f=e=>({400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",500:"Internal Server Error"})[e]||"Unknown Error",g=(e=500,t)=>{if(e instanceof Error){let{message:s,...r}=e;e=e.status||500,t={error:s||f(e),...r}}return t={status:e,...typeof t=="object"?t:{error:t||f(e)}},d(t,{status:e})};var C=p("text/html"),j=p("image/jpeg"),b=p("image/png"),q=p("image/webp");var w=e=>{e.proxy=new Proxy(e.proxy||e,{get:(t,s)=>t[s]!==void 0?t[s]:t?.params?.[s]})},m=(e={})=>{let{origins:t=["*"],maxAge:s,methods:r=["GET"],headers:i={}}=e,a,l={"content-type":"application/json","Access-Control-Allow-Methods":r.join(", "),...i};return s&&(l["Access-Control-Max-Age"]=s),{corsify:o=>{if(!o)throw new Error("No fetch handler responded and no upstream to proxy to specified.");let{headers:n,status:c,body:u}=o;if([101,301,302,308].includes(c))return o;let h=Object.fromEntries(n);return h["access-control-allow-origin"]?o:new Response(u,{status:c,headers:{...h,...l,...a,"content-type":n.get("content-type")}})},preflight:o=>{let n=[...new Set(["OPTIONS",...r])],c=o.headers.get("origin")||"";if(a=(t.includes(c)||t.includes("*"))&&{"Access-Control-Allow-Origin":c},o.method==="OPTIONS"){if(o.headers.get("Origin")!==null&&o.headers.get("Access-Control-Request-Method")!==null&&o.headers.get("Access-Control-Request-Headers")!==null){let u={...l,"Access-Control-Allow-Methods":n.join(", "),"Access-Control-Allow-Headers":o.headers.get("Access-Control-Request-Headers"),...a};return new Response(null,{headers:u})}return new Response(null,{headers:{Allow:n.join(", ")}})}}}};var x=R({base:"/.well-known/matrix"}),{preflight:y,corsify:A}=m({origins:["*"],methods:["GET"]}),E=(e="Not found.")=>g(404,e);x.options("*",y).all("*",w).get("/client",(e,t,s)=>({"m.homeserver":{base_url:"https://"+t.MATRIX_SERVER_ADDR}})).get("/server",(e,t,s)=>({"m.server":t.MATRIX_SERVER_ADDR})).all("*",()=>E("Are you sure about that?"));var k={fetch:async(e,t,s)=>await x.handle(e,t,s).then(d).catch(r=>g(500,r.stack)).then(A)};export{k as default};
//# sourceMappingURL=index.mjs.map
